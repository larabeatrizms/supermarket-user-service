# Meta data describing our component so others can discover and reference it
name: supermarket-user-service
description: Simple NestJS microservice that uses TCP for inter-process communication
keywords:
  - nestjs
  - examples
  - tcp
  - microservices
secrets:
  db_user: docker
  db_pass: docker
  db_name: postgres
# List of microservices powering our component
services:
  database:
    image: postgres:11
    interfaces:
      pg:
        port: 5432
        protocol: postgres
    environment:
      POSTGRES_USER: ${{ secrets.db_user }}
      POSTGRES_PASSWORD: ${{ secrets.db_pass }}
      POSTGRES_DATABASE: ${{ secrets.db_name }}
  api:
    depends_on:
      - database
    build:
      context: ./
    # Specify the port and protocol the service listens on
    interfaces:
      main:
        port: 8080
        protocol: tcp
    environment:
      DB_PASSWORD: ${{ secrets.db_pass }}
      DB_USERNAME: ${{ secrets.db_user }}
      DB_HOST: ${{ services.database.interfaces.pg.host }}
      DB_PORT: 5432
      DB_NAME: ${{ secrets.db_name }}
      PORT: 8080
    # Mount our src directory to the container and use our dev command so we get hot-reloading
    debug:
      command: npm run start:dev
      volumes:
        src:
          host_path: ./src/
          mount_path: /usr/src/app/src/

# List of interfaces our component allows others to connect to
interfaces:
  main:
    description: Exposes the API to upstream traffic
    url: ${{ services.api.interfaces.main.url }}